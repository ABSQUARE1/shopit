name: Shopit CI/CD
on:
  push:
    branches: ['main']

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: us-east-1
  PRIVATE_SSH_KEY: ${{ secrets.PRIVATE_SSH_KEY }}

jobs:
  deploy-resource:
    runs-on: ubuntu-latest
    outputs:
      CLIENT_PUBLIC_IP: ${{ steps.set-ip.outputs.client_public_ip }}
    steps:
      - name: Checkout
        uses: actions/Checkout@v2
      - name: setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_wrapper: false
      - name: Terraform init
        id: init
        run: terraform init 
        working-directory: ./terraform
      - name: Terraform plan
        id: plan
        run: |-
          terraform plan \
          -out=PLAN
        working-directory: ./terraform
      - name: Terraform apply
        id: apply
        run: terraform apply PLAN
        working-directory: ./terraform
      - name: Set outputs
        id: set-ip
        run: |-
          echo "::set-output name=client_public_ip::$(terraform output instance-ip)"
        working-directory: ./terraform

  deploy-app:
    runs-on: ubuntu-latest
    needs: deploy-resource
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set IP env variable
        run:  |-
          echo CLIENT_PUBLIC_IP=${{ needs.deploy-resource.outputs.CLIENT_PUBLIC_IP }} >> $GITHUB_ENV
      - name: Deploy App to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.CLIENT_PUBLIC_IP }}
          username: ubuntu
          key: ${{ env.PRIVATE_SSH_KEY }}
          envs: PRIVATE_SSH_KEY,AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY
          script: |-
            sudo apt-get update
            sudo apt-get install git -y
            sudo apt install nodejs -y
            sudo apt install npm -y
            sudo npm install -g pm2
            sudo pm2 startup systemd
            sudo apt-get install -y nginx
            sudo ufw allow OpenSSH
            sudo ufw allow 'Nginx Full'
            sudo ufw --force enable 
            cd /home/ubuntu/
            sudo rm -rf shopit || true
            git clone https://github.com/ABSQUARE1/shopit.git shopit
            cd shopit/web
            npm install
            rm -rf build || true
            npm run build
            sudo pm2 delete shopit-web || true
            pm2 serve build/ 3000 -f --name "shopit-web" --spa
            sudo rm -rf /etc/nginx/sites-available/default
            sudo cp default /etc/nginx/sites-available/ -r
            sudo systemctl restart nginx
            echo "done"




  